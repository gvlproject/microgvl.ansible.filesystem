#
# Ansible script to install linuxbrew and associated requirements. It will put it into {{ gvl_app_path }} and use sensible temp dirs etc.
# It also sets the pathing correctly for linuxbrew for anyuser that logs in via ssh or a login terminal.
#
  # Install some extra required system packages - this has been moved to the GVL base image as of version 4.1
 - name: Update the apt cache
   apt: update_cache=yes
   become: yes
   become_user: root

 - name: Install some more required system packages
   apt: pkg="{{ item }}" state=latest
   with_items:
     - build-essential
     - curl
     - git
     - m4
     - ruby
     - texinfo
     - libbz2-dev
     - libcurl4-openssl-dev
     - libexpat-dev
     - libncurses-dev
     - zlib1g-dev
     - cpanminus
     - pandoc
     - oracle-java8-installer
   become: yes
   become_user: root

#Create the cache, temp and home locations

- name: Create the homebrew_cache directory
  file: dest="{{ gvl_tmp_path }}/homebrew_temp" state=directory owner=ubuntu group=ubuntu
  become: yes
  become_user: root

- name: Create the homebrew_temp directory
  file: dest="{{ gvl_tmp_path }}/homebrew_cache" state=directory owner=ubuntu group=ubuntu
  become: yes
  become_user: root
  
- name: Create the homebrew home location in /home
  file: dest="{{ homebrew_path }}" state=directory owner=ubuntu group=ubuntu
  become: yes
  become_user: root

- name: Clone linuxbrew
  git: repo="https://github.com/Linuxbrew/linuxbrew.git" dest="{{ homebrew_path }}/.linuxbrew" accept_hostkey=yes force=yes

#- debug: msg="Current ansible environment PATH = {{ ansible_env.PATH }}"
#- debug: msg="Current ansible envorinment = {{ ansible_env }}"
#- debug: msg="Current gvl_app_path = {{ gvl_app_path }}"
#- debug: msg="Current environment = {{ ansible_env | to_nice_json }}"

#Update the brew formula library
- name: Update the brew formula library
  homebrew: update_homebrew=yes
  environment: "{{ linuxbrew_env }}"
  become: yes
  become_user: ubuntu

#Install some required non-default brew packages initially

- name: Install brew modules that need to go first! 
  homebrew: name="{{ item }}" state=present
  environment: "{{ linuxbrew_env }}"
  with_items:
    - gcc
    - pkg-config
    - libtool
    - python
    - python3

#Now add the science, cbl and bioinformatics formula to the brew setup..
- name: Tap some kegs!
  homebrew_tap: tap="{{ item }}" state=present
  environment: "{{ linuxbrew_env }}"
  with_items:
    - homebrew/science
    - tseemann/bioinformatics-linux
    - homebrew/python

    
#Copy the environments and module files across to the temp script dir.

- name: Copy the linuxbrew env file to the temp script dir.
  template: src=linuxbrew-paths.j2 dest="{{ gvl_app_path}}/scripts/linuxbrew-paths.sh"
  become: yes
  become_user: ubuntu

- name: Create a directory for the linuxbrew modulefile
  file: dest="{{ gvl_app_path }}/scripts/modulefiles/linuxbrew" state=directory owner=ubuntu group=ubuntu
  become: yes
  become_user: ubuntu

- name: Copy the linuxbrew module file to the temp script dir.
  template: src=linuxbrew.j2 dest="{{ gvl_app_path }}/scripts/modulefiles/linuxbrew/0.1"
  become: yes
  become_user: ubuntu
